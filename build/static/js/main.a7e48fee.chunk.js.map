{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/complete/complete.js","components/quiz/WMQuiz.js","routes/profile/profile.js","components/badge/badge.js","components/article/article.js","routes/me/Rewards.js","routes/profile/myData.js","routes/me/dashboard.js","components/heatmap/index.js","routes/explore/leaderboard.js","routes/explore/explore.js","routes/learn/challenge.js","routes/learn/learn.js","routes/profile/achievement.js","routes/profile/about.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","location","ProfileMenu","to","icon","text","disabled","className","align","Alignment","LEFT","IconNames","CIRCLE","RIGHT","content","position","Position","RIGHT_BOTTOM","Footer","CENTER","exact","activeClassName","Classes","MINIMAL","Complete","points","isHidden","useWindowSize","width","height","onClick","window","history","back","WMQuiz","type","description","React","useState","value","isComplete","setComplete","DATA","questions","map","question","idx","options","answers","answer","label","inline","name","onChange","selectedValue","intent","Profile","userName","GPBadge","isNaN","pointsIcon","version","xmlns","x","y","viewBox","d","Article","image","interactive","elevation","Elevation","TWO","style","backgroundImage","href","class","Rewards","MyData","Dashboard","newThingsShow","setNewThingsShow","Map","leaderboard","suburb","src","Leaderboard","Explore","selectedTabId","selectTabId","id","panel","Expander","Challenge","score","total","link","theme","Learn","Achievement","stubData","achievements","length","event","contentStyle","background","color","contentArrowStyle","borderRight","date","datetimestamp","iconStyle","colour","badge","details","About","textAlign","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7e48fee.chunk.js","sourcesContent":["import React from 'react';\nimport { IconNames } from \"@blueprintjs/icons\";\nimport {\n    Icon,\n    Alignment,\n    Navbar,\n    NavbarGroup,\n    NavbarHeading,\n    Menu, MenuDivider, MenuItem, Popover, Position } from \"@blueprintjs/core\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./header.css\";\n\nfunction Header({ title, location }) {\n    const ProfileMenu = (\n        <Menu>\n            <Link to=\"/profile\"><MenuItem icon=\"user\" text=\"Profile\" /></Link>\n            <Link to=\"/timeline\"><MenuItem icon=\"star\" text=\"My Badges\" /></Link>\n            <Link to=\"/my-data\"><MenuItem icon=\"timeline-line-chart\" text=\"My Data\" /></Link>\n            <MenuItem icon=\"map\" text=\"Map (coming soon)\" disabled={true} />\n            <MenuDivider />\n            <Link to=\"/about\"><MenuItem icon=\"help\" text=\"About\" /></Link>\n            <MenuItem icon=\"log-out\" text=\"Logout\" disabled={true} />\n        </Menu>\n    );\n\n    return (\n        <header className=\"Header\">\n            <Navbar>\n                <NavbarGroup align={Alignment.LEFT} className=\"Header__logo\">\n                    <Icon icon={IconNames.CIRCLE} />\n                    <NavbarHeading>\n                        <Link to=\"/\"><h1>{title}</h1></Link> <span className=\"Header__tag\">Improve your life.</span>\n                    </NavbarHeading>\n                </NavbarGroup>\n                <NavbarGroup align={Alignment.RIGHT} className=\"Header__points\">\n                    <span className=\"Header__location\">\n                     Your location is {location} <Icon icon=\"geolocation\" />\n                    </span>\n                <Popover content={ProfileMenu} position={Position.RIGHT_BOTTOM}>\n                    <Icon icon=\"user\" className=\"Header__profileIcon\"></Icon>\n                </Popover>\n                </NavbarGroup>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n    Alignment,\n    Button,\n    Classes,\n    Navbar,\n    NavbarGroup,\n} from \"@blueprintjs/core\";\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport \"./footer.css\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <Navbar>\n                <NavbarGroup align={Alignment.CENTER}>\n                    {/** FIXME: Active Styles */}\n                    <NavLink exact activeClassName=\"active\" to=\"/dashboard\"><Button className={Classes.MINIMAL} icon=\"dashboard\" text=\"Dashboard\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/learn\"><Button className={Classes.MINIMAL} icon=\"heart\" text=\"Learn\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/explore\"><Button className={Classes.MINIMAL} icon=\"layout\" text=\"Explore\" /></NavLink>\n                </NavbarGroup>\n            </Navbar>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n    Button,\n} from \"@blueprintjs/core\";\nimport Confetti from 'react-confetti'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport \"./complete.css\";\n\nfunction Complete({ points, isHidden }) {\n    const { width, height } = useWindowSize()\n    if(isHidden) return null;\n    return (\n        <div className=\"Complete\">\n            <Confetti\n                width={width}\n                height={height}\n            />\n\n            <div className=\"Complete__pointsContainer\">\n                <span className=\"Complete__pointsBrackets\"> {`{`} </span>\n                <div className=\"Complete__pointsStack\">\n                    <span className=\"Complete__points\"> {points} </span>\n                    <span className=\"Complete__pointsTxt\">GREEN POINTS</span>\n                </div>\n                <span className=\"Complete__pointsBrackets\"> {`}`}  </span>\n\n            </div>\n            <Button className=\"Complete__wohoo\" onClick={() => {\n                window.history.back();\n            }}>WOHOO!</Button>\n        </div>\n    );\n}\n\nexport default Complete;\n","import React from 'react';\nimport { Radio, RadioGroup } from \"@blueprintjs/core\";\nimport { Button } from \"@blueprintjs/core\";\nimport Complete from '../complete/complete';\nimport \"./quiz.css\";\nimport DATA from \"./data/quiz_WM.json\";\n\nfunction WMQuiz({ type, description, points }) {\n    const [value, handleChange] = React.useState(\"one\");\n    const [isComplete, setComplete] = React.useState(false);\n    const [questions, setQuestion] = React.useState(DATA.questions);\n    return (\n        <div className=\"Quiz\">\n            {isComplete && <Complete points={points} isHidden={!isComplete} />}\n            <h1>{type} Quiz</h1>\n            <p>Complete quiz for {points} points. Begin...</p>\n            <div className=\"bottomSpace\" />\n            {questions.map((question, idx) => {\n                if (question.type === \"radio\") {\n                    const options = question.answers.map(answer => <Radio label={answer.label} value={answer.label} />)\n                    \n                    return (\n                        <>\n                        <RadioGroup\n                            inline=\"inline\"\n                            label={`${idx+1}. ${question.label}`}\n                            name=\"group\"\n                            onChange={(value) => {}}\n                            selectedValue={value}\n                        >\n                            {options}\n                        </RadioGroup>\n                        <div className=\"bottomSpace\" />\n                        </>\n                    )\n                }\n            })}\n            {/* <FormGroup\n    label=\"How well do you XYZ?\"\n    labelFor=\"text-input\"\n>\n<Slider\n                    min={0}\n                    max={10}\n                    stepSize={1}\n                    labelStepSize={1}\n                    onChange={(value) => setFoodScraps(value)}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n</FormGroup> */}\n            {/* <FormGroup\n    helperText=\"It always helps to record these daily in the app. \"\n    label=\"Food scraps in one week?\"\n    labelFor=\"text-input\"\n    labelInfo=\"(cups)\"\n>\n<Slider\n                    min={0}\n                    max={50}\n                    stepSize={1}\n                    labelStepSize={5}\n                    onChange={(value) => setFoodScraps(value)}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n</FormGroup> */}\n\n            {/* <RadioGroup\n                label=\"Biggest proportion of food scraps?\"\n                name=\"group\"\n                onChange={(value) => handleChange(value)}\n                selectedValue={value}\n            >\n                <Radio label=\"Fruit and veggies\" value=\"one\" />\n                <Radio label=\"Processed foods\" value=\"two\" />\n                <Radio label=\"Other\" value=\"three\" />\n            </RadioGroup> */}\n            <div className=\"bottomSpace\" />\n            <Button intent=\"success\" onClick={() => setComplete(true)} type=\"submit\" title=\"Submit assessment\">Submit assessment</Button>\n        </div>\n    );\n}\n\nexport default WMQuiz;\n","import React from 'react';\nimport { Icon } from \"@blueprintjs/core\";\nimport \"./profile.css\";\n\nfunction Profile({ location, points, userName }) {\n    return (\n        <div className=\"Profile\">\n            <div className=\"profile\" />\n            <div className=\"info\">\n                <h2>{userName}</h2>\n                <div className=\"Profile__points\">{points}</div>\n                <div className=\"Profile__pointsText\">Green Points</div>\n        <Icon icon=\"geolocation\" /> {location}\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport {\n  Button,\n  Classes,\n  Icon,\n} from \"@blueprintjs/core\";\nimport \"./badge.css\";\n\nfunction GPBadge({ points, icon }) {\n  const type = isNaN(points) ? \"badge\" : \"points\";\n  const pointsIcon = (<svg version=\"1.1\" className=\"Badge__leaf\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n  width=\"551.391px\" height=\"551.391px\" viewBox=\"0 0 551.391 551.391\">\n<g>\n         <path d=\"M413.695,0c0,0-45.366,44.014-94.43,61.759C-44.068,193.178,109.165,449.277,114.164,450.121\n   c0,0,20.374-35.48,47.896-55.717c174.644-128.389,210.14-276.171,210.14-276.171s-39.19,177.829-194.562,288.479\n   c-34.316,24.426-57.552,84.568-67.388,144.679c0,0,24.325-9.828,34.785-12.49c4.079-26.618,12.607-52.106,27.025-74.875\n   c217.151,25.854,288.272-149.123,297.563-210.136C491.552,109.79,413.695,0,413.695,0z\"/>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n</svg>);\n  \n  return (\n    <div className={`Badge ${type}`}>\n      <div className={`${Classes.MINIMAL} `}>\n      {type === \"points\" && pointsIcon}\n      {icon && <Icon icon={icon} />}\n      <span className=\"Badge__text\">{points} {type === \"points\" ? \"Green Points\" : \"\"}</span>\n      </div>\n    </div >\n  );\n}\n\nexport default GPBadge;\n","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport \"./article.css\";\n\nfunction Article({ image, title, description }) {\n    return (\n        <div className=\"Article\">\n            <Card interactive={true} elevation={Elevation.TWO}>\n                <div className=\"Article__image\" style={{ backgroundImage: `url(\"${image}\")` }} />\n                {/* <div className=\"left\"><Badge points=\"20\" /></div> */}\n                <div className=\"Article__content\">\n                    <h5>\n                        <a href=\"http://www.test.com\">{title}</a>\n                    </h5>\n                    <p class=\"Article__desc\">{description}</p>\n                </div>\n            </Card>\n            <div className=\"clear\" />\n        </div>\n    );\n}\n\nexport default Article;\n","import React from 'react';\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport Badge from \"../../components/badge/badge\";\nimport Article from \"../../components/article/article\";\nimport \"./Rewards.css\";\n\nfunction Rewards() {\n  return (\n    <div className=\"Rewards\">\n      <Article\n        title=\"15% off Wine at Marrickville Fish n Chip Takeout\"\n        description=\"Save 20% off all sustainable and organically grown food. Voucher Code: 666. \"\n        image=\"leisure-people-technology-concept-happy-couple-laptop-computer-takeaway-pizza-drinking-red-wine-home-happy-151690785.jpg\"\n        />\n      <Article\n        title=\"Glebe Cruelty Free Shop 20% off\"\n        description=\"Save 20% off all sustainable and organically grown food. \"\n        image=\"healthy-organic-food-apple-cider-vinegar-juice-glass-bottle-fresh-red-apples-healthy-organic-food-apple-cider-vinegar-153750037.jpg\"\n        />\n      <Article\n        title=\"Devil By Design 6.66% off\"\n        description=\"Save 20% off all sustainable and organically grown food. Voucher Code: 666. \"\n        image=\"online-order-grocery-shopping-concept-food-delivery-ingredients-service-home-cooking-packages-box-icon-media-152464079.jpg\"\n        />\n        \n    </div>\n  );\n}\n\nexport default Rewards;\n","import React from 'react';\nimport { Card } from \"@blueprintjs/core\";\nimport \"./myData.css\";\n\nfunction MyData() {\n    return (\n        <div className=\"MyData\">\n            <Card>\n                <h2>You have no data yet :(</h2>\n            </Card>\n        </div>\n    );\n}\n\nexport default MyData;\n","import React from 'react';\nimport { Icon } from \"@blueprintjs/core\";\nimport { Card, Button } from \"@blueprintjs/core\";\nimport Rewards from \"./Rewards\";\nimport MyData from \"./../profile/myData\";\nimport './dashboard.css';\n\nfunction Dashboard({ location }) {\n  const [selectedTabId, selectTabId] = React.useState(\"MyData\");\n  const [newThingsShow, setNewThingsShow] = React.useState(true);\n\n  return (\n    <div className=\"Dashboard container\">\n      {newThingsShow && <Card interactive={false} className=\"Dashboard__alert\"\n            >\n                    <h2 className=\"Learn__dashboardHeader\">Want some competition?</h2>\n                    <p>Start the <strong>Greta Thunberg Challenge</strong> and earn 200 points.</p>\n                    <p><Button intent=\"success\" className=\"rightMargin\">Begin challenge</Button> \n                    <Button intent=\"info\" onClick={() => setNewThingsShow(false)}>No thank you</Button>\n                    </p>\n                    \n            </Card>}\n      <h1>Dashboard</h1>\n      <MyData />\n      <h3>Local Offers from {location} <Icon icon=\"geolocation\" /></h3>\n      <Rewards />\n      {/* <h3>Daily Challenges</h3>\n      <Rewards /> */}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport \"./heatmap.css\";\nimport DATA from \"./data/map.json\";\n// import Badge from \"../badge/badge\";\n\nfunction Map() {\n    const [leaderboard, setLeaderboard] = React.useState(DATA.leaderboard);\n\n    return (\n        <div className=\"Map\">\n            <div className=\"Map__itemHeader\">\n                <div className=\"left\">\n                    SUBURB\n                </div>\n                <div className=\"right\">\n                    POINTS\n                </div>\n                <div className=\"bottomSpace clear\" />\n            </div>\n            {leaderboard.map(suburb => {\n                return (\n                    <div className=\"Map__item\">\n                        <div className=\"left\">\n                            {suburb.label}\n                        </div>\n                        <div className=\"right\">\n                            {suburb.points}\n                            {/* <Badge points={suburb.points} /> */}\n                        </div>\n                        <div className=\"clear\" />\n                    </div>)\n            })}\n            <img src=\"./map.png\" />\n\n        </div>\n    );\n}\n\nexport default Map;\n","import React from 'react';\nimport Heatmap from \"./../../components/heatmap/index\";\n\nfunction Leaderboard() {\n    return (\n        <div className=\"Leaderboard\">\n            <Heatmap />\n        </div>\n    );\n}\n\nexport default Leaderboard;\n","import React from 'react';\nimport { Tab, Tabs } from \"@blueprintjs/core\";\nimport Leaderboard from \"./leaderboard\";\nimport Rewards from \"./../me/Rewards\";\nimport './explore.css';\n\nfunction Explore() {\n  const [selectedTabId, selectTabId] = React.useState(\"Leaderboard\");\n\n  return (\n    <div className=\"Explore container-wide\">\n      <Tabs onChange={(id) => { selectTabId(id)}} selectedTabId={selectedTabId}>\n        <Tab id=\"Leaderboard\" title=\"Leaderboard\" panel={<Leaderboard />} />\n        <Tab id=\"Community\" title=\"Community\" panel={<Rewards />} />\n        <Tabs.Expander />\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport './challenge.css';\nimport { Icon } from \"@blueprintjs/core\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport Badge from \"../../components/badge/badge\";\n\nfunction Challenge({ name, score, total, icon, link, theme }) {\n  const isComplete = score === total;\n\n  return (\n    <Link to={link} className={isComplete ? `Challenge ${theme}` : `Challenge complete ${theme}`}>\n        <div className=\"name\">{name}</div>\n        <Icon icon={icon} className=\"bottomMargin Challenge__icon\" />\n        <div className=\"clear\" />\n        {isComplete && <div className=\"total complete\">COMPLETE</div>}\n        {!isComplete && <Badge points={score} />}\n    </Link>\n  );\n}\n\nexport default Challenge;\n","import React from 'react';\nimport Challenge from \"./challenge\";\nimport \"./learn.css\";\n\nfunction Learn() {\n    return (\n        <div className=\"Learn container\">\n            <h1>Learn by doing.</h1>\n            <p>You can complete the following challenges to redeem all points for this week. </p>\n            <p>The more you learn, the more green points you earn.</p>\n            {/* <p><Link to=\"/about\"><Button icon=\"share\" >Learn more about Wasteful ></Button></Link></p> */}\n            <h3>Local Challenges</h3>\n            <div className=\"flex\">\n                <Challenge\n                    name=\"Managing Waste\"\n                    score=\"300\"\n                    total=\"15\"\n                    icon=\"refresh\"\n                    link=\"/waste-management\"\n                />\n                <Challenge\n                    name=\"Food Waste\"\n                    score=\"300\"\n                    total=\"15\"\n                    icon=\"tree\"\n                    link=\"\"\n                />\n                <Challenge\n                    name=\"Compost Challenge\"\n                    score=\"300\"\n                    total=\"15\"\n                    icon=\"heatmap\"\n                />\n            </div>\n            <div className=\"clear\" />\n            <h3>National Challenges</h3>\n            <div className=\"flex\">\n                {/* <Challenge\n                name=\"Covid O War\"\n                score=\"12\"\n                total=\"15\"\n                icon=\"heatmap\"\n                theme=\"COVID19\"\n            /> */}\n            <Challenge\n                name=\"Donations to Red Cross\"\n                score=\"12\"\n                total=\"15\"\n                icon=\"plus\"\n                theme=\"RED\"\n            />\n            <Challenge\n                name=\"Donations to Salvos\"\n                score=\"12\"\n                total=\"15\"\n                icon=\"plus\"\n                theme=\"RED\"\n            />\n            </div>\n        </div>\n    );\n}\n\nexport default Learn;\n","import React from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport {\n    Icon,\n} from \"@blueprintjs/core\";\nimport './timeline.min.css';\nimport stubData from \"./achievements.json\";\nimport \"./achievement.css\";\nimport Badge from \"../../components/badge/badge\";\n\nfunction Achievement() {\n  return (\n    <div className=\"Achievement container\">\n      <VerticalTimeline>\n        {stubData.achievements.length && stubData.achievements.map(event => (\n              <VerticalTimelineElement\n                className=\"vertical-timeline-element--work\"\n                contentStyle={{ background: 'transparent', color: '#fff' }}\n                contentArrowStyle={{ borderRight: `7px solid  #efefef` }}\n                date={event.datetimestamp}\n                iconStyle={{ background: '#efefef', color: `${event.colour}` }}\n                icon={<Icon icon={event.badge} />}\n              >\n                <h3>{event.details}</h3>\n                {/* <Badge points={event.details} icon={event.badge} /> */}\n                <div className=\"Achievement__points\"><Badge points={event.points} /></div>\n                <div className=\"clear\" />\n              </VerticalTimelineElement>\n            ))}\n      </VerticalTimeline>\n      \n    </div>\n  );\n}\n\nexport default Achievement;\n","import React from 'react';\nimport \"./about.css\";\n\nfunction About({ title }) {\n    return (\n        <div className=\"About container\">\n            <h1>About {title}</h1>\n            <h2>PROBLEM</h2>\n            <ul style={{ textAlign: \"left\" }}>\n                <li>Surplus of food / excess money</li>\n                <li>Household waste / charity</li>\n                <li>People have more time now / life improvement</li>\n            </ul>\n            <h2>SOLUTION</h2>\n            <p>Donations and Waste Management</p>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n// common components\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport WMQuiz from './components/quiz/WMQuiz';\n// pages\nimport Profile from './routes/profile/profile';\nimport Dashboard from './routes/me/dashboard';\nimport Explore from './routes/explore/explore';\nimport Learn from './routes/learn/learn';\nimport Achievement from \"./routes/profile/achievement\";\nimport MyData from \"./routes/profile/myData\";\nimport About from \"./routes/profile/about\";\n\nimport \"./blueprint.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [userName, setUserName] = React.useState(\"Jane Smith\");\n  const [title, setTitle] = React.useState(\"Zero Waste\");\n  const [location, setLocation] = React.useState(\"Marrickville\");\n  const [points, setPoints] = React.useState(200);\n\n  return (\n    <Router>\n      <Header title={title} location={location} />\n      <div className=\"content\">\n        <Switch>\n          <Route path=\"/profile\">\n            <Profile\n            userName={userName}\n            points={points}\n            location={location}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About title={title} />\n          </Route>\n          \n          <Route path=\"/timeline\">\n            <Achievement />\n          </Route>\n          <Route path=\"/my-data\">\n            <div className=\"container\">\n            <MyData />\n            </div>\n          </Route>\n          <Route path=\"/learn\">\n            <Learn />\n          </Route>\n          <Route path=\"/explore\">\n            <Explore />\n          </Route>\n          <Route path=\"/waste-management\">\n            <div className=\"container\">\n            <WMQuiz\n              type=\"Waste Management\"\n              description=\"Complete this quiz to earn 32 extra points\"\n              points={200}\n            />\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <Dashboard\n            location={location}\n            />\n          </Route>\n        </Switch>\n\n      </div>\n\n      <Footer />\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}