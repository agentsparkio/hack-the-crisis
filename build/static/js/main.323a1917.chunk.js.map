{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/complete/complete.js","components/quiz/quiz.js","components/badge/badge.js","routes/me/achievement.js","routes/me/Rewards.js","routes/me/account.js","components/heatmap/index.js","routes/explore/leaderboard.js","routes/explore/community.js","routes/explore/explore.js","routes/learn/challenge.js","routes/learn/learn.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","align","Alignment","LEFT","icon","IconNames","HEATMAP","to","Footer","CENTER","exact","activeClassName","Classes","MINIMAL","text","Complete","points","isHidden","useWindowSize","width","height","onClick","window","history","back","Quiz","type","description","React","useState","foodScraps","setFoodScraps","isComplete","setComplete","label","labelFor","min","max","stepSize","labelStepSize","onChange","value","labelRenderer","title","GPBadge","Achievement","stubData","achievements","length","map","event","contentStyle","background","colour","color","contentArrowStyle","borderRight","date","datetimestamp","iconStyle","badge","details","Rewards","interactive","elevation","Elevation","TWO","href","intent","Account","selectedTabId","selectTabId","id","panel","Expander","Map","frameborder","scrolling","src","allowfullscreen","Leaderboard","Community","Explore","Challenge","name","score","total","link","Learn","newThingsShow","setNewThingsShow","confirmButtonText","cancelButtonText","isOpen","onClose","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.323a1917.chunk.js","sourcesContent":["import React from 'react';\nimport { IconNames } from \"@blueprintjs/icons\";\nimport {\n    Icon,\n    Alignment,\n    Navbar,\n    NavbarGroup,\n    NavbarHeading,\n} from \"@blueprintjs/core\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport \"./header.css\";\n\nfunction Header() {\n    return (\n        <header className=\"Header\">\n            <Navbar>\n                <NavbarGroup align={Alignment.LEFT}>\n                    <Icon icon={IconNames.HEATMAP} />\n                    <NavbarHeading>\n                    <Link to=\"/\"><h1>Garbage Pride</h1></Link>\n                    </NavbarHeading>\n                </NavbarGroup>\n                {/* <NavbarGroup align={Alignment.RIGHT} className=\"Header__points\">\n                    <ProgressBar value={0.6} stripes={false} />\n                    <Link to=\"/learn\"><div className=\"Header__pointsRemain\">EARN 400 MORE GP</div></Link>\n                    \n                </NavbarGroup> */}\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n    Alignment,\n    Button,\n    Classes,\n    Navbar,\n    NavbarGroup,\n} from \"@blueprintjs/core\";\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport \"./footer.css\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <Navbar>\n                <NavbarGroup align={Alignment.CENTER}>\n                    {/** FIXME: Active Styles */}\n                    <NavLink exact activeClassName=\"active\" to=\"/me\"><Button className={Classes.MINIMAL} icon=\"user\" text=\"Me\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/learn\"><Button className={Classes.MINIMAL} icon=\"heart\" text=\"Learn\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/explore\"><Button className={Classes.MINIMAL} icon=\"layout\" text=\"Explore\" /></NavLink>\n                </NavbarGroup>\n            </Navbar>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n    Button,\n} from \"@blueprintjs/core\";\nimport Confetti from 'react-confetti'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport \"./complete.css\";\n\nfunction Complete({ points, isHidden }) {\n    const { width, height } = useWindowSize()\n    if(isHidden) return null;\n    return (\n        <div className=\"Complete\">\n            <Confetti\n                width={width}\n                height={height}\n            />\n\n            <div className=\"Complete__pointsContainer\">\n                <span className=\"Complete__pointsBrackets\"> {`{`} </span>\n                <div className=\"Complete__pointsStack\">\n                    <span className=\"Complete__points\"> {points} </span>\n                    <span className=\"Complete__pointsTxt\">GREEN POINTS</span>\n                </div>\n                <span className=\"Complete__pointsBrackets\"> {`}`}  </span>\n\n            </div>\n            <Button className=\"Complete__wohoo\" onClick={() => {\n                window.history.back();\n            }}>WOHOO!</Button>\n        </div>\n    );\n}\n\nexport default Complete;\n","import React from 'react';\n// import { Radio, RadioGroup } from \"@blueprintjs/core\";\nimport { FormGroup, Slider, Button } from \"@blueprintjs/core\";\nimport Complete from './../complete/complete';\nimport \"./quiz.css\";\n\nfunction Quiz({ type, description, points }) {\n    // const [value, handleChange] = React.useState(\"one\");\n    const [foodScraps, setFoodScraps] = React.useState(1);\n    const [isComplete, setComplete] = React.useState(false);\n\n    return (\n        <div className=\"Quiz\">\n            {isComplete && <Complete points={points} isHidden={!isComplete}  />}\n            <h1>{type} Assessment</h1>\n            <p>Complete quiz for an extra {points} points</p>\n            <FormGroup\n                label=\"1. How well do you XYZ?\"\n                labelFor=\"text-input\"\n            >\n                <Slider\n                    min={0}\n                    max={10}\n                    stepSize={1}\n                    labelStepSize={1}\n                    onChange={(value) => setFoodScraps(value)}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n            </FormGroup>\n            {/* <FormGroup\n    label=\"How well do you XYZ?\"\n    labelFor=\"text-input\"\n>\n<Slider\n                    min={0}\n                    max={10}\n                    stepSize={1}\n                    labelStepSize={1}\n                    onChange={(value) => setFoodScraps(value)}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n</FormGroup> */}\n            {/* <FormGroup\n    helperText=\"It always helps to record these daily in the app. \"\n    label=\"Food scraps in one week?\"\n    labelFor=\"text-input\"\n    labelInfo=\"(cups)\"\n>\n<Slider\n                    min={0}\n                    max={50}\n                    stepSize={1}\n                    labelStepSize={5}\n                    onChange={(value) => setFoodScraps(value)}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n</FormGroup> */}\n\n            {/* <RadioGroup\n                label=\"Biggest proportion of food scraps?\"\n                name=\"group\"\n                onChange={(value) => handleChange(value)}\n                selectedValue={value}\n            >\n                <Radio label=\"Fruit and veggies\" value=\"one\" />\n                <Radio label=\"Processed foods\" value=\"two\" />\n                <Radio label=\"Other\" value=\"three\" />\n            </RadioGroup> */}\n            <Button onClick={() => setComplete(true)} type=\"submit\" title=\"Submit assessment\">Submit assessment</Button>\n        </div>\n    );\n}\n\nexport default Quiz;\n","import React from 'react';\nimport {\n    Button,\n    Classes,\n  } from \"@blueprintjs/core\";\n  import \"./badge.css\";\n\nfunction GPBadge({ points }) {\n  return (\n    <div className=\"Badge\">\n        <Button className={`${Classes.MINIMAL} GreenPointBadge`} icon=\"tree\" text={`${points} GREEN POINTS`} />\n    </div>\n  );\n}\n\nexport default GPBadge;\n","import React from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport {\n    Icon,\n} from \"@blueprintjs/core\";\nimport './timeline.min.css';\nimport stubData from \"./achievements.json\";\nimport \"./achievement.css\";\nimport Badge from \"../../components/badge/badge\";\n\nfunction Achievement() {\n  return (\n    <div className=\"Achievement\">\n      <VerticalTimeline>\n        {stubData.achievements.length && stubData.achievements.map(event => (\n              <VerticalTimelineElement\n                className=\"vertical-timeline-element--work\"\n                contentStyle={{ background: `${event.colour}`, color: '#fff' }}\n                contentArrowStyle={{ borderRight: `7px solid  ${event.colour}` }}\n                date={event.datetimestamp}\n                iconStyle={{ background: '#efefef', color: `${event.colour}` }}\n                icon={<Icon icon={event.badge} />}\n              >\n                <h3 className=\"vertical-timeline-element-title\">{event.details}\n                <div className=\"right Achievement__points\"><Badge points={event.points} /></div>\n                </h3>\n              </VerticalTimelineElement>\n            ))}\n      }\n      </VerticalTimeline>\n      \n    </div>\n  );\n}\n\nexport default Achievement;\n","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport Badge from \"../../components/badge/badge\";\nimport \"./Rewards.css\";\n\nfunction Rewards() {\n  return (\n    <div className=\"Rewards\">\n      <Card interactive={true} elevation={Elevation.TWO}>\n      <div className=\"left\"><Badge points=\"20\" /></div>\n        <h5>\n          <a href=\"http://www.test.com\">Cruelty Free Shop 10% off</a>\n          <Button className=\"right\" intent=\"success\">REDEEM REWARD</Button>\n        </h5>\n      </Card>\n      <Card interactive={true} elevation={Elevation.TWO}>\n      <div className=\"left\"><Badge points=\"20\" /></div>\n        <h5>\n          <a href=\"http://www.test.com\">Nut Grocer Online Shop 10% off</a>\n          <Button className=\"right\" intent=\"success\">REDEEM REWARD</Button>\n        </h5>\n      </Card>\n      <Card interactive={true} elevation={Elevation.TWO}>\n      <div className=\"left\"><Badge points=\"20\" /></div>\n        <h5>\n          <a href=\"http://www.test.com\">50% off reuseable containers</a>\n          <Button className=\"right\" intent=\"success\">REDEEM REWARD</Button>\n        </h5>\n      </Card>\n    </div>\n  );\n}\n\nexport default Rewards;\n","import React from 'react';\nimport { Tab, Tabs } from \"@blueprintjs/core\";\nimport Achievement from \"./achievement\";\nimport Rewards from \"./Rewards\";\nimport Badge from \"../../components/badge/badge\";\nimport './Account.css';\n\nfunction Account() {\n  const [selectedTabId, selectTabId] = React.useState(\"Achievement\");\n\n  return (\n    <div className=\"Me\">\n      <div className=\"profile\" />\n      <div className=\"info\">\n        Jane Smith<br />\n        Testville NSW<br />\n        Level 10 - Captain Planet<br />\n        <Badge points=\"20\" />\n      </div>\n      <Tabs onChange={(id) => { selectTabId(id)}} selectedTabId={selectedTabId}>\n        <Tab id=\"Achievement\" title=\"Achievement\" panel={<Achievement />} />\n        <Tab id=\"Rewards\" title=\"Rewards\" panel={<Rewards />} />\n        <Tabs.Expander />\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default Account;\n","import React from 'react';\n\nfunction Map() {\n    return (\n        <div className=\"Map\">\n            <iframe title=\"heatmap\" height=\"425px\" width=\"100%\" frameborder=\"0\" scrolling=\"no\" src=\"https://developers-dot-devsite-v2-prod.appspot.com/maps/documentation/javascript/examples/full/layer-heatmap\" allowfullscreen=\"\">\n            </iframe>\n        </div>\n    );\n}\n\nexport default Map;\n\n","import React from 'react';\nimport Heatmap from \"./../../components/heatmap/index\";\n\nfunction Leaderboard() {\n    return (\n        <div className=\"Leaderboard\">\n            <Heatmap />\n        </div>\n    );\n}\n\nexport default Leaderboard;\n","import React from 'react';\n\nfunction Community() {\n    return (\n        <div className=\"Community\">\n            COMMUNITY TODO: Data\n        </div>\n    );\n}\n\nexport default Community;\n","import React from 'react';\nimport { Tab, Tabs } from \"@blueprintjs/core\";\nimport Leaderboard from \"./leaderboard\";\nimport Community from \"./community\";\nimport './explore.css';\n\nfunction Explore() {\n  const [selectedTabId, selectTabId] = React.useState(\"Leaderboard\");\n\n  return (\n    <div className=\"Explore\">\n      <Tabs onChange={(id) => { selectTabId(id)}} selectedTabId={selectedTabId}>\n        <Tab id=\"Leaderboard\" title=\"Leaderboard\" panel={<Leaderboard />} />\n        <Tab id=\"Community\" title=\"Community\" panel={<Community />} />\n        <Tabs.Expander />\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport './challenge.css';\nimport { Icon } from \"@blueprintjs/core\";\nimport {\n  Link\n} from \"react-router-dom\";\n\nfunction Challenge({ name, score, total, icon, link }) {\n  const isComplete = score === total;\n\n  return (\n    <Link to={link} className=\"Challenge__container\">\n      <div className={isComplete ? \"Challenge\" : \"Challenge complete\"}>\n        <div className=\"name\">{name} <Icon icon={icon} /></div>\n        <div className=\"score\">{score} GREEN POINTS</div>\n        {isComplete && <div className=\"total\">COMPLETE</div>}\n        {!isComplete && <div className=\"total\">{score} / {total} GP</div>}\n      </div>\n    </Link>\n  );\n}\n\nexport default Challenge;\n","import React from 'react';\nimport { Alert } from \"@blueprintjs/core\";\nimport Challenge from \"./challenge\";\nimport \"./learn.css\";\n\nfunction Learn() {\n    const [newThingsShow, setNewThingsShow] = React.useState(true);\n\n    return (\n        <div className=\"Learn\">\n            <h1>Learn about Sustainability</h1>\n            <p>You can complete the following challenges to redeem all points for this week. The more you learn, the more green points you earn.</p>\n            <Alert\n                intent=\"success\"\n                confirmButtonText=\"Begin Challenge\"\n                cancelButtonText=\"Maybe Later\"\n                isOpen={newThingsShow}\n                onClose={() => setNewThingsShow(false)}\n                className=\"Learn__dashboard\"\n            >\n                    <h2 className=\"Learn__dashboardHeader\">Want some competition?</h2>\n                    <p>Start the <strong>Greta Thunberg Challenge</strong> and earn 200 green points.</p>\n            </Alert>\n            <Challenge\n                name=\"Recycling 101\"\n                score=\"3\"\n                total=\"15\"\n                icon=\"tree\"\n                link=\"/recycling\"\n            />\n            <Challenge\n                name=\"Food Waste\"\n                score=\"3\"\n                total=\"15\"\n                icon=\"tree\"\n                link=\"\"\n            />\n            <Challenge\n                name=\"Compost Challenge\"\n                score=\"15\"\n                total=\"15\"\n                icon=\"heatmap\"\n            />\n            <Challenge\n                name=\"Compost Challenge\"\n                score=\"15\"\n                total=\"15\"\n                icon=\"heatmap\"\n            />\n        </div>\n    );\n}\n\nexport default Learn;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n// common components\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport Quiz from './components/quiz/quiz';\n// pages\nimport Account from './routes/me/account';\nimport Explore from './routes/explore/explore';\nimport Learn from './routes/learn/learn';\n\nimport \"./blueprint.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"content\">\n        <Switch>\n\n          <Route path=\"/me\">\n            <Account />\n          </Route>\n          <Route path=\"/learn\">\n            <Learn />\n          </Route>\n          <Route path=\"/explore\">\n            <Explore />\n          </Route>\n          <Route path=\"/recycling\">\n            <Quiz\n              type=\"Recycling\"\n              description=\"Complete this quiz to earn 32 extra points\"\n              points={20}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Account />\n\n          </Route>\n        </Switch>\n\n      </div>\n\n      <Footer />\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}