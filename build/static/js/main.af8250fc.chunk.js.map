{"version":3,"sources":["components/notification/notification.js","components/header/header.js","components/footer/footer.js","components/complete/complete.js","components/quiz/WMQuiz.js","components/badge/badge.js","components/article/article.js","routes/me/Rewards.js","routes/learn/challenge.js","routes/me/dashboard.js","routes/profile/profile.js","components/heatmap/index.js","routes/explore/leaderboard.js","routes/explore/explore.js","components/alert/alert.js","routes/learn/learn.js","routes/profile/achievement.js","routes/profile/myData.js","routes/profile/about.js","routes/food/food.js","App.js","serviceWorker.js","index.js"],"names":["IntroCollapse","isOpen","notifyText","notifyTextHeader","React","useState","open","setOpen","formattedText","__html","className","onClick","icon","keepChildrenMounted","dangerouslySetInnerHTML","Header","title","location","notify","ProfileMenu","to","text","disabled","align","Alignment","LEFT","IconNames","CLEAN","RIGHT","content","position","Position","RIGHT_BOTTOM","Footer","CENTER","exact","activeClassName","Classes","MINIMAL","Complete","points","isHidden","useWindowSize","width","height","window","history","back","WMQuiz","type","setNotifyText","setNotifyTextHeader","setIntroAlert","setIntroAlertText","setIntroAlertHeader","propFoodScraps","handleChange","foodScraps","setFoodScraps","threeRs","setThreeRs","isComplete","setComplete","progress","setProgress","useEffect","result","parseFloat","stripes","value","label","name","onChange","event","currentTarget","selectedValue","labelFor","labelInfo","helperText","min","max","stepSize","labelStepSize","labelRenderer","intent","GPBadge","isNaN","pointsIcon","version","xmlns","x","y","viewBox","d","Article","image","description","interactive","elevation","Elevation","TWO","style","backgroundImage","href","Rewards","Challenge","score","total","link","theme","Dashboard","Profile","userName","Map","DATA","leaderboard","map","suburb","src","Leaderboard","Explore","selectedTab","selectedTabId","selectTabId","id","panel","Expander","Alert","confirmText","cancelText","confirmFunc","cancelFunc","withRouter","introAlert","introAlertText","introAlertHeader","indexOf","replace","Achievement","stubData","achievements","length","contentStyle","background","color","contentArrowStyle","borderRight","date","datetimestamp","iconStyle","colour","badge","details","MyData","About","textAlign","Food","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af8250fc.chunk.js","sourcesContent":["import React from 'react';\nimport { Collapse, Icon } from \"@blueprintjs/core\";\nimport \"./intro.css\";\n\nfunction IntroCollapse({ isOpen, notifyText, notifyTextHeader }) {\n    const [open, setOpen] = React.useState(isOpen);\n    const formattedText = {\n        __html: notifyText\n    }\n\n    return (\n        <div className=\"Intro\">\n            <a className=\"Intro__hitArea\" onClick={() => setOpen(!open)}>\n                {!open && <Icon icon=\"chevron-down\" />}\n                {open && <Icon icon=\"chevron-up\" />}\n                <span className=\"Intro__text\">{notifyTextHeader}</span>\n            </a>\n            <Collapse isOpen={open} keepChildrenMounted={false}>\n                <div className=\"IntroCollapse__hi\" dangerouslySetInnerHTML={formattedText} />\n            </Collapse>\n        </div>\n\n    );\n}\n\nexport default IntroCollapse;\n","import React from 'react';\nimport { IconNames } from \"@blueprintjs/icons\";\nimport {\n    Icon,\n    Alignment,\n    Navbar,\n    NavbarGroup,\n    NavbarHeading,\n    Menu, MenuDivider, MenuItem, Popover, Position } from \"@blueprintjs/core\";\n\nimport { Link } from \"react-router-dom\";\nimport IntroCollapse from \"../notification/notification\";\nimport \"./header.css\";\n\nfunction Header({ title, location, notifyTextHeader, notifyText, notify }) {\n    const ProfileMenu = (\n        <Menu>\n            <Link to=\"/profile\"><MenuItem icon=\"user\" text=\"Profile\" /></Link>\n            <Link to=\"/timeline\"><MenuItem icon=\"star\" text=\"My Badges\" /></Link>\n            <Link to=\"/my-data\"><MenuItem icon=\"timeline-line-chart\" text=\"My Data\" /></Link>\n            <Link to=\"/food\"><MenuItem icon=\"send-to-graph\" text=\"Food Management\" /></Link>\n            <MenuItem icon=\"map\" text=\"Map (coming soon)\" disabled={true} />\n            <MenuDivider />\n            <Link to=\"/about\"><MenuItem icon=\"help\" text=\"About\" /></Link>\n            <MenuItem icon=\"log-out\" text=\"Logout\" disabled={true} />\n        </Menu>\n    );\n\n    return (\n        <header className=\"Header\">\n            <Navbar>\n                <NavbarGroup align={Alignment.LEFT} className=\"Header__logo\">\n                    <Icon icon={IconNames.CLEAN} />\n                    <NavbarHeading>\n                        <Link to=\"/\"><h1>{title}</h1></Link> <span className=\"Header__tag\">Improve your life.</span>\n                    </NavbarHeading>\n                </NavbarGroup>\n                <NavbarGroup align={Alignment.RIGHT} className=\"Header__points\">\n                    <span className=\"Header__location\">\n                     Your location is {location} <Icon icon=\"geolocation\" />\n                    </span>\n                <Popover content={ProfileMenu} position={Position.RIGHT_BOTTOM}>\n                    <div className=\"Header__profile\" />\n                    {/* <Icon icon=\"user\" className=\"Header__profileIcon\"></Icon> */}\n                </Popover>\n                </NavbarGroup>\n            </Navbar>\n            <IntroCollapse isOpen={notify} notify={notify} notifyTextHeader={notifyTextHeader} notifyText={notifyText} />\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport {\n    Alignment,\n    Button,\n    Classes,\n    Navbar,\n    NavbarGroup,\n} from \"@blueprintjs/core\";\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport \"./footer.css\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <Navbar>\n                <NavbarGroup align={Alignment.CENTER}>\n                    {/** FIXME: Active Styles */}\n                    <NavLink exact activeClassName=\"active\" to=\"/\"><Button className={Classes.MINIMAL} icon=\"walk\" text=\"Do\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/learn\"><Button className={Classes.MINIMAL} icon=\"heart\" text=\"Learn\" /></NavLink>\n                    <NavLink exact activeClassName=\"active\" to=\"/explore\"><Button className={Classes.MINIMAL} icon=\"layout\" text=\"Explore\" /></NavLink>\n                </NavbarGroup>\n            </Navbar>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n    Button,\n} from \"@blueprintjs/core\";\nimport Confetti from 'react-confetti'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport \"./complete.css\";\n\nfunction Complete({ points, isHidden }) {\n    const { width, height } = useWindowSize()\n    if(isHidden) return null;\n    return (\n        <div className=\"Complete\">\n            <Confetti\n                width={width}\n                height={height}\n            />\n\n            <div className=\"Complete__pointsContainer\">\n                <span className=\"Complete__pointsBrackets\"> {\"\\\\ \"} </span>\n                <div className=\"Complete__pointsStack\">\n                    <span className=\"Complete__points\"> {points} </span>\n                    <span className=\"Complete__pointsTxt\">GREEN POINTS</span>\n                </div>\n                <span className=\"Complete__pointsBrackets\"> {`/`}  </span>\n\n            </div>\n            <Button className=\"Complete__wohoo\" onClick={() => {\n                window.history.back();\n            }}>WOHOO!</Button>\n        </div>\n    );\n}\n\nexport default Complete;\n","import React from 'react';\nimport { Radio, RadioGroup, ProgressBar, FormGroup, Slider } from \"@blueprintjs/core\";\nimport { Button } from \"@blueprintjs/core\";\nimport Complete from '../complete/complete';\nimport \"./quiz.css\";\n// import DATA from \"./data/quiz_WM.json\";\n\nfunction WMQuiz({ type, points, setNotifyText, setNotifyTextHeader, setIntroAlert, setIntroAlertText, setIntroAlertHeader }) {\n    const [propFoodScraps, handleChange] = React.useState(\"\");\n    const [foodScraps, setFoodScraps] = React.useState(0);\n    const [threeRs, setThreeRs] = React.useState(\"\");\n    const [isComplete, setComplete] = React.useState(false);\n    const [progress, setProgress] = React.useState(false);\n    // const [answers, updateAnswers] = React.useState(DATA.answers);\n    // const [questions, setQuestion] = React.useState(DATA.questions);\n    React.useEffect(() => {\n        let result = 0;\n        if(propFoodScraps!== \"\") result++;\n        if(foodScraps!== 0) result++;\n        if(threeRs!== \"\") result++;\n        setProgress(parseFloat(result/3));\n    }, [propFoodScraps, foodScraps, threeRs]);\n    React.useEffect(() => {\n        if(isComplete === true) {\n            setNotifyText(\"<p>Thanks for completing the <strong>Managing Waste Quiz</strong>.</p><p>Go to the <a href='/rewards'>Rewards page</a> to redeem your points. </p>\")\n            setNotifyTextHeader(\"You've just won 200 points! CONGRATULATIONS :)\")\n            setIntroAlert(true)\n            setIntroAlertText(\"<p>Thanks for completing the <strong>Managing Waste Quiz!</strong>. </p><p>Go to the <a href='/rewards'>Rewards page</a> to redeem your 200 points. </p>\")\n            setIntroAlertHeader(\"You've just won 200 points! CONGRATULATIONS :)\")\n        }\n    }, [isComplete]);\n\n    return (\n        <div className=\"Quiz\">\n            <ProgressBar stripes={false} value={progress} />\n            {isComplete && <Complete points={points} isHidden={!isComplete} />}\n            <h1>{type} Quiz</h1>\n            <p>Complete quiz for {points} points. Begin...</p>\n            <div className=\"bottomSpace\" />\n            {/* {questions.map((question, idx) => {\n                if (question.type === \"radio\") {\n                    const options = question.answers.map(answer => <Radio label={answer.label} value={answer.label} />)\n\n                    return (\n                        <>\n                            <RadioGroup\n                                inline=\"inline\"\n                                label={`${idx + 1}. ${question.label}`}\n                                name=\"group\"\n                                onChange={(value) => {\n                                    const newAnswers = [\n                                        ...answers,\n                                        {\n                                            [idx]: {\n                                                value\n                                            }\n                                        }\n                                    ];\n                                    \n                                    updateAnswers(newAnswers);\n                            }}\n                            selectedValue={answers[idx].value}\n                        >\n                            {options}\n                        </RadioGroup>\n                        <div className=\"bottomSpace\" />\n                        </>\n    )\n}\n            })} */}\n             <RadioGroup\n                label=\"What do the 3 R's in waste disposal stand for?\"\n                name=\"group\"\n                onChange={(event) => {\n                    setThreeRs(event.currentTarget.value)\n                }}\n                selectedValue={threeRs}\n            >\n                <Radio label=\"Reorganise, Reuse, Recycle\" value=\"one\" />\n                <Radio label=\"Reduce, Reuse, Recycle\" value=\"two\" />\n                <Radio label=\"Reduce, Remake, Recycle\" value=\"three\" />\n            </RadioGroup>\n            <FormGroup\n                label=\"Food scraps in one week?\"\n                labelFor=\"text-input\"\n                labelInfo=\"(cups)\"\n                helperText=\"These are used to determine your average food waste.\"\n            >\n                <Slider\n                    min={0}\n                    max={20}\n                    stepSize={1}\n                    labelStepSize={5}\n                    onChange={(event) => {\n                        setFoodScraps(event)\n                    }}\n                    labelRenderer={(value) => value}\n                    value={foodScraps}\n                />\n            </FormGroup>\n\n            <RadioGroup\n                label=\"Biggest proportion of food scraps?\"\n                name=\"group\"\n                onChange={(event) => {\n                    handleChange(event.currentTarget.value)\n                }}\n                selectedValue={propFoodScraps}\n            >\n                <Radio label=\"Fruit and veggies\" value=\"one\" />\n                <Radio label=\"Processed foods\" value=\"two\" />\n                <Radio label=\"Other\" value=\"three\" />\n            </RadioGroup>\n            <div className=\"bottomSpace\" />\n            <Button disabled={progress !== 1} intent=\"success\" onClick={() => setComplete(true)} type=\"submit\" title=\"Submit\">Submit for {points} Green Points!</Button>\n        </div >\n    );\n}\n\nexport default WMQuiz;\n","import React from 'react';\nimport {\n  Button,\n  Classes,\n  Icon,\n} from \"@blueprintjs/core\";\nimport \"./badge.css\";\n\nfunction GPBadge({ points, icon }) {\n  const type = isNaN(points) ? \"badge\" : \"points\";\n  const pointsIcon = (<svg version=\"1.1\" className=\"Badge__leaf\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n  width=\"551.391px\" height=\"551.391px\" viewBox=\"0 0 551.391 551.391\">\n<g>\n         <path d=\"M413.695,0c0,0-45.366,44.014-94.43,61.759C-44.068,193.178,109.165,449.277,114.164,450.121\n   c0,0,20.374-35.48,47.896-55.717c174.644-128.389,210.14-276.171,210.14-276.171s-39.19,177.829-194.562,288.479\n   c-34.316,24.426-57.552,84.568-67.388,144.679c0,0,24.325-9.828,34.785-12.49c4.079-26.618,12.607-52.106,27.025-74.875\n   c217.151,25.854,288.272-149.123,297.563-210.136C491.552,109.79,413.695,0,413.695,0z\"/>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n       <g>\n       </g>\n</svg>);\n  \n  return (\n    <div className={`Badge ${type}`}>\n      <div className={`${Classes.MINIMAL} `}>\n      {type === \"points\" && pointsIcon}\n      {icon && <Icon icon={icon} />}\n      <span className=\"Badge__text\">{points} {type === \"points\" ? \"Green Points\" : \"\"}</span>\n      </div>\n    </div >\n  );\n}\n\nexport default GPBadge;\n","import React from 'react';\nimport { Button, Card, Elevation } from \"@blueprintjs/core\";\nimport Badge from \"../../components/badge/badge\";\nimport \"./article.css\";\n\nfunction Article({ image, title, description, points }) {\n    return (\n        <div className=\"Article\">\n            <Card interactive={true} elevation={Elevation.TWO}>\n                <div className=\"Article__image\" style={{ backgroundImage: `url(\"${image}\")` }} />\n                {/* <div className=\"left\"><Badge points=\"20\" /></div> */}\n                <div className=\"Article__content\">\n                    <h5>\n                        <a href=\"http://www.test.com\">{title}</a>\n                    </h5>\n                    <p className=\"Article__desc\">{description}</p>\n                    <Badge points={points} />\n                </div>\n            </Card>\n            <div className=\"clear\" />\n        </div>\n    );\n}\n\nexport default Article;\n","import React from 'react';\nimport { Card, Elevation } from \"@blueprintjs/core\";\nimport Badge from \"../../components/badge/badge\";\nimport Article from \"../../components/article/article\";\nimport \"./Rewards.css\";\n\nfunction Rewards() {\n  return (\n    <div className=\"Rewards\">\n      <Article\n        points={600}\n        title=\"15% off Wine at Marrickville Fish n Chip Takeout\"\n        description=\"Save 20% off all sustainable and organically grown food. \"\n        image=\"leisure-people-technology-concept-happy-couple-laptop-computer-takeaway-pizza-drinking-red-wine-home-happy-151690785.jpg\"\n        />\n      <Article\n        points={500}\n        title=\"Glebe Cruelty Free Shop 20% off\"\n        description=\"Save 20% off all sustainable and organically grown food. \"\n        image=\"healthy-organic-food-apple-cider-vinegar-juice-glass-bottle-fresh-red-apples-healthy-organic-food-apple-cider-vinegar-153750037.jpg\"\n        />\n      <Article\n        points={200}\n        title=\"Devil By Design discount sale! \"\n        description=\"Save 20% off all sustainable and organically grown food. Voucher Code: 666. \"\n        image=\"online-order-grocery-shopping-concept-food-delivery-ingredients-service-home-cooking-packages-box-icon-media-152464079.jpg\"\n        />\n        \n    </div>\n  );\n}\n\nexport default Rewards;\n","import React from 'react';\nimport './challenge.css';\nimport { Icon } from \"@blueprintjs/core\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport Badge from \"../../components/badge/badge\";\n\nfunction Challenge({ name, score, total, icon, link, theme }) {\n  const isComplete = score === total;\n\n  return (\n    <Link to={link} className={isComplete ? `Challenge ${theme} complete` : `Challenge ${theme}`}>\n        <div className=\"name\">{name}</div>\n        <Icon icon={icon} className=\"bottomMargin Challenge__icon\" />\n        <div className=\"clear\" />\n        {isComplete && <div className=\"total complete\">COMPLETE</div>}\n        {!isComplete && <Badge points={score} />}\n    </Link>\n  );\n}\n\nexport default Challenge;\n","import React from 'react';\nimport { Icon } from \"@blueprintjs/core\";\nimport Rewards from \"./Rewards\";\nimport './dashboard.css';\nimport Challenge from \"./../learn/challenge\";\n\nfunction Dashboard({ location }) {\n  return (\n    <div className=\"Dashboard container\">\n      <h1>Get active</h1>\n      <h3>National Challenges</h3>\n      <div className=\"flex\">\n        <Challenge\n          name=\"Covid O War\"\n          score=\"500\"\n          total=\"1500\"\n          icon=\"heatmap\"\n          theme=\"COVID19\"\n        />\n        <Challenge\n          name=\"Red Cross Donate\"\n          score=\"120\"\n          total=\"1500\"\n          icon=\"plus\"\n          theme=\"RED\"\n        />\n        <Challenge\n          name=\"Salvos Donate\"\n          score=\"12\"\n          total=\"1500\"\n          icon=\"plus\"\n          theme=\"RED\"\n        />\n      </div>\n    <h3>Local Offers from {location} <Icon icon=\"geolocation\" /></h3>\n    <Rewards />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Icon } from \"@blueprintjs/core\";\nimport \"./profile.css\";\n\nfunction Profile({ location, points, userName }) {\n    return (\n        <div className=\"Profile container\">\n            <div className=\"profile\" />\n            <div className=\"info\">\n                <h2>{userName}</h2>\n                <div className=\"Profile__points\">{points}</div>\n                <div className=\"Profile__pointsText\">Green Points</div>\n                <div className=\"Profile__level\">Level 16: Green Thumb <Icon icon=\"thumbs-up\" /></div>\n        {/* <Icon icon=\"geolocation\" /> {location} */}\n        <div className=\"bottomSpace\" />\n        <h3>Your badges</h3>\n        [ badges ]\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport \"./heatmap.css\";\nimport DATA from \"./data/map.json\";\n// import Badge from \"../badge/badge\";\n\nfunction Map() {\n    const [leaderboard, setLeaderboard] = React.useState(DATA.leaderboard);\n\n    return (\n        <div className=\"Map\">\n            <div className=\"Map__itemHeader\">\n                <div className=\"left\">\n                    SUBURB\n                </div>\n                <div className=\"right\">\n                    POINTS\n                </div>\n                <div className=\"bottomSpace clear\" />\n            </div>\n            {leaderboard.map(suburb => {\n                return (\n                    <div className=\"Map__item\">\n                        <div className=\"left\">\n                            {suburb.label}\n                        </div>\n                        <div className=\"right\">\n                            {suburb.points}\n                            {/* <Badge points={suburb.points} /> */}\n                        </div>\n                        <div className=\"clear\" />\n                    </div>)\n            })}\n            <img src=\"./map2.png\" />\n\n        </div>\n    );\n}\n\nexport default Map;\n","import React from 'react';\nimport Heatmap from \"./../../components/heatmap/index\";\n\nfunction Leaderboard({ setNotifyText, setNotifyTextHeader }) {\n    setNotifyText(\"<p>You made it! You can use this coupon to redeem 50% off our rewards retailers. <strong>CODE: TOP5</strong></p><p><a>Click here</a> to share daily challenges with friends and earn 50 GREEN POINTS!</p>\")\n    setNotifyTextHeader(\"CONGRATULATIONS! It looks like you're in the top 5 suburbs!\")\n    return (\n        <div className=\"Leaderboard\">\n            <Heatmap />\n        </div>\n    );\n}\n\nexport default Leaderboard;\n","import React from 'react';\nimport { Tab, Tabs } from \"@blueprintjs/core\";\nimport Leaderboard from \"./leaderboard\";\nimport Rewards from \"./../me/Rewards\";\nimport './explore.css';\n\nfunction Explore({ setNotifyText, setNotifyTextHeader, selectedTab }) {\n  const [selectedTabId, selectTabId] = React.useState(selectedTab);\n\n  return (\n    <div className=\"Explore container-wide\">\n      <Tabs onChange={(id) => { selectTabId(id)}} selectedTabId={selectedTabId}>\n        <Tab id=\"Leaderboard\" title=\"Leaderboard\" panel={<Leaderboard setNotifyTextHeader={setNotifyTextHeader} setNotifyText={setNotifyText} />} />\n        <Tab id=\"Rewards\" title=\"Rewards\" panel={<Rewards />} />\n        <Tabs.Expander />\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default Explore;\n","import React from 'react';\nimport { Card, Button } from \"@blueprintjs/core\";\nimport \"./alert.css\";\n\nfunction Alert({ title, content, confirmText, cancelText, confirmFunc, cancelFunc, isHidden}) {\n  if(isHidden) return null;\n  const formattedText = {\n    __html: content\n}\n\n    return (\n        <div className=\"Alert\">\n            {!isHidden && <Card interactive={false} className=\"bottomSpace\"\n            >\n                    <h2>{title}</h2>\n                    <div dangerouslySetInnerHTML={formattedText} />\n\n                    <p><Button onClick={confirmFunc} intent=\"success\" className=\"rightMargin\">{confirmText}</Button> \n                    <Button intent=\"info\" onClick={cancelFunc}>{cancelText}</Button>\n                    </p>\n                    \n            </Card>}\n        </div>\n    );\n}\n\nexport default Alert;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Challenge from \"./challenge\";\nimport Alert from \"./../../components/alert/alert\";\nimport \"./learn.css\";\n\nfunction Learn({ userName, setIntroAlert, introAlert, introAlertText, introAlertHeader }) {\n    return (\n        <div className=\"Learn container\">\n            {introAlert && (<h1>Hi <strong>{userName}</strong></h1>)}\n            <Alert\n            title={introAlertHeader}\n            content={introAlertText}\n            confirmText=\"Yes, lets do this\"\n            cancelText=\"No thanks\"\n            confirmFunc={() => {\n                // FIXME:\n                if(introAlertHeader.indexOf(\"Do you want to do something fulfilling\") !== 0) {\n                    window.location.replace(\"/rewards\")\n                } else {\n                    window.location.replace(\"/about\")\n                }\n            }}\n            cancelFunc={() => setIntroAlert(false)}\n            isHidden={!introAlert}\n            />\n            <p>We've made some lessons to help you do better with your household waste.</p>\n            <p>We've also given you 1000 Green points to start with.</p>\n            {/* <p><Link to=\"/about\"><Button icon=\"share\" >Learn more about Wasteful ></Button></Link></p> */}\n            <h3>Enjoy!</h3>\n            <div className=\"flex\">\n                <Challenge\n                    name=\"Managing Waste\"\n                    score=\"300\"\n                    total=\"400\"\n                    icon=\"refresh\"\n                    link=\"/waste-management\"\n                />\n                <Challenge\n                    name=\"Food Waste\"\n                    score=\"300\"\n                    total=\"400\"\n                    icon=\"tree\"\n                    link=\"\"\n                />\n                <Challenge\n                    name=\"Compost Challenge\"\n                    score=\"400\"\n                    total=\"400\"\n                    icon=\"heatmap\"\n                />\n            </div>\n            <div className=\"clear\" />\n        </div>\n    );\n}\n\nexport default withRouter(Learn);\n","import React from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport {\n    Icon,\n} from \"@blueprintjs/core\";\nimport './timeline.min.css';\nimport stubData from \"./achievements.json\";\nimport \"./achievement.css\";\nimport Badge from \"../../components/badge/badge\";\n\nfunction Achievement() {\n  return (\n    <div className=\"Achievement container\">\n      <VerticalTimeline>\n        {stubData.achievements.length && stubData.achievements.map(event => (\n              <VerticalTimelineElement\n                className=\"vertical-timeline-element--work\"\n                contentStyle={{ background: 'transparent', color: '#fff' }}\n                contentArrowStyle={{ borderRight: `7px solid  #efefef` }}\n                date={event.datetimestamp}\n                iconStyle={{ background: '#efefef', color: `${event.colour}` }}\n                icon={<Icon icon={event.badge} />}\n              >\n                <h3>{event.details}</h3>\n                {/* <Badge points={event.details} icon={event.badge} /> */}\n                <div className=\"Achievement__points\"><Badge points={event.points} /></div>\n                <div className=\"clear\" />\n              </VerticalTimelineElement>\n            ))}\n      </VerticalTimeline>\n      \n    </div>\n  );\n}\n\nexport default Achievement;\n","import React from 'react';\nimport { Card } from \"@blueprintjs/core\";\nimport \"./myData.css\";\n\nfunction MyData() {\n    return (\n        <div className=\"MyData\">\n            <Card>\n                <h2>You have no data yet :(</h2>\n            </Card>\n        </div>\n    );\n}\n\nexport default MyData;\n","import React from 'react';\nimport \"./about.css\";\n\nfunction About({ title }) {\n    return (\n        <div className=\"About container\">\n            <h1>About {title}</h1>\n            <h2>PROBLEM</h2>\n            <ul style={{ textAlign: \"left\" }}>\n                <li>Surplus of food / excess money</li>\n                <li>Household waste / charity</li>\n                <li>People have more time now / life improvement</li>\n            </ul>\n            <h2>SOLUTION</h2>\n            <p>Donations and Waste Management</p>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport \"./food.css\";\n\nfunction Food({ setNotifyText, setNotifyTextHeader }) {\n    return (\n        <div className=\"Food container\">\n            <h1>Manage your food</h1>\n            <p>We are working on a tool to track your food inventory.</p>\n        </div>\n    );\n}\n\nexport default Food;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n// common components\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport WMQuiz from './components/quiz/WMQuiz';\n\n// pages\nimport Dashboard from './routes/me/dashboard';\nimport Profile from './routes/profile/profile';\nimport Explore from './routes/explore/explore';\nimport Learn from './routes/learn/learn';\nimport Achievement from \"./routes/profile/achievement\";\nimport MyData from \"./routes/profile/myData\";\nimport About from \"./routes/profile/about\";\nimport Food from \"./routes/food/food\";\n\nimport \"./blueprint.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [userName, setUserName] = React.useState(\"Jane\");\n  const [title, setTitle] = React.useState(\"Garbage Pride\");\n  const [location, setLocation] = React.useState(\"Marrickville\");\n  const [points, setPoints] = React.useState(1000);\n  const [notify, setNotify] = React.useState(false);\n  const [notifyText, setNotifyText] = React.useState(\"<p>We understand that there are more people than ever in self isolation right now. </p><p>We are here to help you organise and reduce your waste at home to allow for more efficient purchases of foods and essentials.</p><p>The more you learn and donate, the more green points you earn. </p><p>You will be able to purchase sustainable products and services from local enterprises with your Green Points. <br /></p><a>Find out how</a><br />\");\n  const [notifyTextHeader, setNotifyTextHeader] = React.useState(\"Hello newbie! :) \");\n  const [introAlert, setIntroAlert] = React.useState(true);\n  const [introAlertText, setIntroAlertText] = React.useState(\"<p>We understand that there are more people than ever in self isolation right now. </p><p>We are here to help you organise and reduce your waste at home to allow for more efficient purchases of foods and essentials.</p><p>The more you learn and donate, the more green points you earn. </p><p>You will be able to purchase sustainable products and services from local enterprises with your Green Points. <br /></p><br />\");\n  const [introAlertHeader, setIntroAlertHeader] = React.useState(\"Do you want to do something fulfilling for yourself and your home?\");\n  React.useEffect(() => {\n    if(!introAlert) {\n      setNotifyText(\"Learn more about how this app can help you reduce your waste.\");\n      setNotifyTextHeader(\"More info\");\n    }\n  }, [introAlert]);\n\n  return (\n    <Router>\n      <Header title={title} location={location} notify={notify} notifyText={notifyText} notifyTextHeader={notifyTextHeader} />\n      <div className=\"content\">\n        <Switch>\n          <Route path=\"/profile\">\n            <Profile\n              userName={userName}\n              points={points}\n              location={location}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About title={title} />\n          </Route>\n\n          <Route path=\"/timeline\">\n            <Achievement />\n          </Route>\n          <Route path=\"/my-data\">\n            <div className=\"container\">\n              <MyData />\n            </div>\n          </Route>\n          <Route path=\"/learn\">\n            <Dashboard\n              userName={userName}\n              setNotifyText={setNotifyText}\n              setNotifyTextHeader={setNotifyTextHeader}\n              location={location}\n            />\n          </Route>\n          <Route path=\"/food\">\n            <Food />\n          </Route>\n          <Route path=\"/explore\">\n            <Explore\n              setNotifyText={setNotifyText}\n              setNotifyTextHeader={setNotifyTextHeader}\n              selectedTab=\"Leaderboard\"\n            />\n          </Route>\n          <Route path=\"/rewards\">\n            <Explore\n              setNotifyText={setNotifyText}\n              setNotifyTextHeader={setNotifyTextHeader}\n              selectedTab=\"Rewards\"\n            />\n          </Route>\n          <Route path=\"/waste-management\">\n            <div className=\"container-top\">\n              <WMQuiz\n                type=\"Waste Management\"\n                description=\"Complete this quiz to earn 32 extra points\"\n                points={200}\n                setNotifyText={setNotifyText}\n                setNotifyTextHeader={setNotifyTextHeader}\n                setIntroAlert={setIntroAlert}\n                setIntroAlertText={setIntroAlertText}\n                setIntroAlertHeader={setIntroAlertHeader}\n              />\n            </div>\n          </Route>\n          <Route path=\"/\">\n            {/* <Onboarding /> */}\n            <Learn\n              introAlert={introAlert}\n              introAlertText={introAlertText}\n              introAlertHeader={introAlertHeader}\n              setIntroAlert={setIntroAlert}\n              userName={userName}\n              setNotifyText={setNotifyText}\n              setNotifyTextHeader={setNotifyTextHeader}\n              location={location}\n            />\n          </Route>\n        </Switch>\n\n      </div>\n\n      <Footer />\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}